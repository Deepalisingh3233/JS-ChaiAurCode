JavaScript Execution Context

{} -> Global Execution 

1. Global Execution Context
2. Function Execution Context
3. Eval Execution Context

{} -> Phases
1. Memory Creation Phase or Creation Phase
2. Execution Phase

let val1 = 10;
let val2 = 20;

function addNum(num1, num2){
    let total = num1 + num2
    return total
}

let result1 = addNum(val1, val2)
let result2 = addNum(10, 2)

Steps:-
1. Global Execution
        |
        this
2. Memory Phase
    val1 -> undefined
    val2 -> undefined
    addNum -> definition
    result1 -> undefined
    result2 -> undefined

3. Execution Phase
    val1 -> 10
    val2 -> 20
    addNum -> new variable environment + Execution Thread 

    Memory Phase
        val1 -> undefined
        val2 -> undefined
        total -> undefined
    Execution Context
        num1 -> 10
        num2 -> 20
        total -> 30 (return to global Execution)

    Delete the new variable environment + Execution Thread 

    call Stack


    Global Execution